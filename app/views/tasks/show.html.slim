.header
  .col-md-8
    .std-heading data-toggle="tooltip" data-placement="bottom" title="#{@task.title}"
      i.i.fa.fa-file-text-o style=("color: #008000")
      = ' '
      = truncate(@task.title, length: 100)
  .col-md-4
    span.star-rating.pull-right style=("font-size: 2.0em")
      - [*1..5].each do |i|
        - if @task.average_rating >= i
          span.fa.fa-star.overall-rating data-rating=i
        - elsif (@task.average_rating + 0.5) >= i
          span.fa.fa-star-half-o.overall-rating data-rating=i
        - else
          span.fa.fa-star-o.overall-rating data-rating=i
      small
        .rating-dropdown
          span.btn.btn-xs#rate
            = t('exercises.rate')+ ' '
            span.caret
          .popup-rating
            .rating data-task-id=@task.id
              - if @user_rating
                - [*1..5].each do |i|
                  - if @user_rating >= i
                    span.fa.fa-star data-rating=i
                  - else
                    span.fa.fa-star-o data-rating=i
              - else
                - [*1..5].each do |i|
                  span.fa.fa-star-o data-rating=i
    /= render 'remove_state_tag', exercise: @task

  br
legend.toggle-next
  span.number = '1'
  = t('exercises.form.basic_info') + ' '
  span.fa.fa-caret-up
.show-table.exercise-show
  .row
    .row-label
      = t('exercises.title')
      | :
    .row-value data-toggle="tooltip" data-placement="bottom" title="#{@task.title}"
      = truncate(@task.title, length: 120)

  /- if @task_relation
    .row
      .row-label
        = t('exercises.parent')
        | :
      .row-value
        - if @task_relation.origin
          = link_to @task_relation.origin.title, exercise_path(@task_relation.origin)
        - else
          = t('exercises.parent_deleted')
    .row
      .row-label
        = t('exercises.relation')
        | :
      .row-value
        = @task_relation.relation.name

  .row
    .row-label
      = t('tasks.programming_language')
      | :
    .row-value
      = @task.programming_language&.language_with_version || t('tasks.form.none')
  .row.vertical
    .row-label
      = t('tasks.description')
      | :
    .row-value
      = @task.description


legend.toggle-next.closed
  span.number = '2'
  = t('tasks.form.additional_info') + ' '
  span.fa.fa-caret-down
.show-table.exercise-show style="display:none;"
  .row.vertical
    .row-label
      = t('tasks.internal_description')
      | :
    .row-value
      = @task.internal_description
  - if @task.meta_data.present?
    .row.vertical
      .row-label
        = t('tasks.show.meta_data')
        | :
      .row-value
        pre
          = JSON.pretty_generate @task.meta_data
  .row
    .row-label
      = t('common.created_at')
      | :
    .row-value
      = @task.created_at
  .row
    .row-label
      = t('common.created_by')
      | :
    - if !@task.user
      .row-value
        = t('users.undefined')
    - elsif @task.user == current_user
      .row-value
        = t('users.yourself')
    - elsif @task.user.first_name.nil?
      .row-value
        = "User#{@task.user.id}"
    - else
      .row-value
        = link_to @task.user.name, user_path(@task.user)
  .row
    .row-label
      = t('tasks.uuid')
    .row-value
      = @task.uuid
  .row
    .row-label
      = t('tasks.parent_uuid')
    .row-value
      = @task.parent_uuid
  .row
    .row-label
      = t('tasks.language')
    .row-value
      = @task.language
  /.row
    .row-label
      = t('exercises.visibility.label')
      | :
    .row-value
      = @task.private ? t('exercises.visibility.private') : t('exercises.visibility.public')
  /.row
    .row-label
      = t('exercises.labels')
      | :
    .row-value
      - @task.labels.each do |label|
        .exercise_label style=("background-color: #{'#' + label.color.to_s}; color: #{'#' + label.font_color.to_s};")
          = label.name
  /.row
    .row-label
      = t('exercises.groups')
      | :
    .row-value
      - @task.groups.each do |group|
        = link_to group.name, group_path(group)
        = ' '
  /.row
    .row-label
      = t('exercises.license')
      | :
    .row-value
      - if @task.license
        = @task.license.name
        = ': '
        = link_to @task.license.link, @task.license.link
      - else
        = t('exercises.show.no_license_chosen') + ' '
        = link_to('Edit', edit_exercise_path(@task)) + '.'
  /.row
    .row-label
      = t('exercises.impact')
      | :
    .row-value
      p.impact
        = t('exercises.downloads')
        = ': '
        = @task.downloads.to_s
      p.impact
        = t('exercises.in_carts')
        = ': '
        = @task.in_carts
      p.impact
        = t('exercises.in_collections')
        = ': '
        = @task.in_collections

legend.toggle-next
  span.number = '3'
  = t('exercises.files.label') + ' '
  span.fa.fa-caret-up
- if @files.empty?
  p style="margin-left: 10px; margin-bottom: 30px"
    = t('exercises.show.no_files')
.files
  - @files.each do |file|
    .show-table.exercise-show
      .table-header.closed.toggle-next
        = file.full_file_name
        = ' '
        span.fa.fa-caret-down
      .file-content
        .row
          .row-label
            = t('tasks.files.name')
            | :
          .row-value
            = file.name
        .row
          .row-label
            = t('tasks.files.path')
            | :
          .row-value
            = file.path
        .row
          .row-label
            = t('tasks.files.internal_description')
            | :
          .row-value
            = file.internal_description
        .row
          .row-label
            = t('tasks.files.xml_id')
            | :
          .row-value
            = file.xml_id

        - if !file.attachment.present?
          .row
            .editor.readonly data-file-name="#{file.name}"
              = file.content
        - else
          .row.vertical
            .row-label
              = t('exercises.files.attachment')
              | :
            .row-value
              - if file.attachment.image?
                = image_tag(file.attachment.variant(resize_to_limit: [900, 900]))
              - else
                = link_to file.attachment.filename, download_attachment_task_file_path(file), 'data-turbolinks': false
        .row
          .row-label
            = t('tasks.files.used_by_grader')
            | :
          .row-value
            = file.used_by_grader
        .row
          .row-label
            = t('tasks.files.visible')
            | :
          .row-value
            = file.visible
        .row
          .row-label
            = t('tasks.files.usage_by_lms')
            | :
          .row-value
            = file.usage_by_lms
        /.row
          .row-label
            = t('exercises.files.extension')
            | :
          .row-value
            = file.file_type.name_with_extension if file.file_type
        /.row
          .row-label
            = t('exercises.files.role')
            | :
          .row-value
            = t("exercises.files.roles.#{file.role || 'none'}")

legend.toggle-next
  span.number = '4'
  = t('exercises.tests.label') + ' '
  span.fa.fa-caret-up
- if @tests.empty?
  p style="margin-left: 10px; margin-bottom: 30px"
    = t('exercises.show.no_tests')
.tests
  - @tests.each do |test|
    .show-table.exercise-show
      .table-header.closed.toggle-next
        = test.title
        = ' '
        span.fa.fa-caret-down
      .test-content
        .row
          .row-label
            = t('tasks.tests.title')
            | :
          .row-value
            = test.title
        .row
          .row-label
            = t('tasks.tests.description')
            | :
          .row-value
            = test.description
        .row
          .row-label
            = t('tasks.tests.internal_description')
            | :
          .row-value
            = test.internal_description
        - if test.meta_data.present?
          .row.vertical
            .row-label
              = t('tasks.show.meta_data')
              | :
            .row-value
              pre
                = JSON.pretty_generate test.meta_data
        .row
          .row-label
            = t('tasks.tests.test_type')
            | :
          .row-value
            = test.test_type
        .row
          .row-label
            = t('tasks.tests.xml_id')
            | :
          .row-value
            = test.xml_id
        .row
          .row-label
            = t('tasks.tests.validity')
            | :
          .row-value
            = test.validity
        .row
          .row-label
            = t('tasks.tests.timeout')
            | :
          .row-value
            = test.timeout

        .files-header
          = label_tag nil, t('tasks.files.label') + ':'
        .files
          - test.files.each do |file|
            .show-table.exercise-show
              .table-header.closed.toggle-next
                = file.full_file_name
                = ' '
                span.fa.fa-caret-down
              .file-content
                .row
                  .row-label
                    = t('tasks.files.name')
                    | :
                  .row-value
                    = file.name
                .row
                  .row-label
                    = t('tasks.files.path')
                    | :
                  .row-value
                    = file.path
                .row
                  .row-label
                    = t('tasks.files.internal_description')
                    | :
                  .row-value
                    = file.internal_description
                .row
                  .row-label
                    = t('tasks.files.xml_id')
                    | :
                  .row-value
                    = file.xml_id
                - if !file.attachment.present?
                  .row
                    .editor.readonly data-file-name="#{file.name}"
                      = file.content
                - else
                  .row.vertical
                    .row-label
                      = t('exercises.files.attachment')
                      | :
                    .row-value
                      - if file.attachment.image?
                        = image_tag(file.attachment.variant(resize_to_limit: [900, 900]))
                      - else
                        = link_to file.attachment.filename, download_attachment_task_file_path(file), 'data-turbolinks': false
                .row
                  .row-label
                    = t('tasks.files.used_by_grader')
                    | :
                  .row-value
                    = file.used_by_grader
                .row
                  .row-label
                    = t('tasks.files.visible')
                    | :
                  .row-value
                    = file.visible
                .row
                  .row-label
                    = t('tasks.files.usage_by_lms')
                    | :
                  .row-value
                    = file.usage_by_lms

legend.toggle-next
  span.number = '5'
  = t('tasks.model_solution.plural') + ' '
  span.fa.fa-caret-up
- if @model_solutions.empty?
  p style="margin-left: 10px; margin-bottom: 30px"
    = t('tasks.model_solution.none_present')
.model_solutions
  - @model_solutions.each do |model_solution|
    .show-table.exercise-show
      .table-header.closed.toggle-next
        = t('tasks.model_solution.singular')
        = ' '
        = @model_solutions.find_index(model_solution) + 1
        = ' '
        span.fa.fa-caret-down
      .test-content
        .row
          .row-label
            = t('tasks.tests.description')
            | :
          .row-value
            = model_solution.description
        .row
          .row-label
            = t('tasks.tests.internal_description')
            | :
          .row-value
            = model_solution.internal_description
        .row
          .row-label
            = t('tasks.tests.xml_id')
            | :
          .row-value
            = model_solution.xml_id

        .files-header
          = label_tag nil, t('tasks.files.label') + ':'
        .files
          - model_solution.files.each do |file|
            .show-table.exercise-show
              .table-header.closed.toggle-next
                = file.full_file_name
                = ' '
                span.fa.fa-caret-down
              .file-content
                .row
                  .row-label
                    = t('tasks.files.name')
                    | :
                  .row-value
                    = file.name
                .row
                  .row-label
                    = t('tasks.files.path')
                    | :
                  .row-value
                    = file.path
                .row
                  .row-label
                    = t('tasks.files.internal_description')
                    | :
                  .row-value
                    = file.internal_description
                .row
                  .row-label
                    = t('tasks.files.xml_id')
                    | :
                  .row-value
                    = file.xml_id
                - if !file.attachment.present?
                  .row
                    .editor.readonly data-file-name="#{file.name}"
                      = file.content
                - else
                  .row.vertical
                    .row-label
                      = t('exercises.files.attachment')
                      | :
                    .row-value
                      - if file.attachment.image?
                        = image_tag(file.attachment.variant(resize_to_limit: [900, 900]))
                      - else
                        = link_to file.attachment.filename, download_attachment_task_file_path(file), 'data-turbolinks': false
                .row
                  .row-label
                    = t('tasks.files.used_by_grader')
                    | :
                  .row-value
                    = file.used_by_grader
                .row
                  .row-label
                    = t('tasks.files.visible')
                    | :
                  .row-value
                    = file.visible
                .row
                  .row-label
                    = t('tasks.files.usage_by_lms')
                    | :
                  .row-value
                    = file.usage_by_lms
.button-panel
  /.button-box
    .button-description
      = "Save Exercises for later by adding them to your cart or a collection."
    .wrapper
      = link_to t('exercises.show.add_to_cart'), add_to_cart_exercise_path(@task), method: 'post', class: 'btn btn-default'
      .dropdown.btn-group
        = button_tag class: 'btn btn-default dropdown-toggle', data: {toggle: 'dropdown'} do
          = t('exercises.show.add_to_collection') + ' '
          span.caret
        ul.scrollable.dropdown-menu[role="menu"]
          - if !current_user.collections.empty?
            - current_user.collections.each do |collection|
              li
                = link_to collection.title, add_to_collection_exercise_path(collection: collection), method: 'post', class: 'dropdown-item'
          - else
            li
              = link_to t('exercises.show.add_collection'), new_collection_path(current_user)
  - if can? :export, Task
    .button-box
      .button-description
        = t('tasks.download')
      .wrapper
        = link_to t('shared.download_zip'), download_task_path(@task), class: 'btn btn-default', 'data-turbolinks'=> false
        .dropdown.btn-group
          = button_tag class: 'btn btn-default dropdown-toggle', data: {toggle: 'dropdown'} do
            = t('tasks.show.export') + ' '
            .caret
          ul.scrollable.dropdown-menu[role="menu"]
            li.dropdown-header = t('tasks.show.export_to') + ': '
            - if !current_user.available_account_links.empty?
              - current_user.available_account_links.each do |acc_link|
                li
                  = link_to acc_link.name, export_external_start_task_path(account_link: acc_link), method: :post, remote: true, class: 'dropdown-item export-test'
            - else
              li
                = link_to t('tasks.show.define_account_link'), new_user_account_link_path(current_user)

  /.button-box
    .button-description
      = "Derivate, translate or port this Exercise by duplicating it. The duplicate will be owned by you."
    .wrapper
      = link_to t('exercises.all.duplicate'), duplicate_exercise_path(@task), class:'btn btn-default'

/.related-panel
  = button_tag type: 'button', class: 'full-window-button related-button' do
    = t('exercises.all.related_exercises')+ ' '
    span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
    span.fa.fa-caret-down.my-caret
/div class=("related-box with-borders") data-exercise=@task.id
  .slide-left.inactive
    = button_tag do
      i.fa.fa-caret-left
  .content
  .slide-right.inactive
    = button_tag do
      i.fa.fa-caret-right
.expandable-panel.with-borders
  = button_tag type: 'button', class: 'full-window-button show-comment-button', data: {task_id: @task.id} do
    => t('comments.show_comments')
    span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
    span.fa.fa-caret-down.my-caret
  .comment-box data-task=@task.id
    = form_for :comment, url: task_comments_path(@task), remote: true do |f|
      .write-comment
        .input-group
          = f.label_tag 'new_comment_label', 'New Comment', class: 'input-group-addon'
          = f.text_field :text, class: 'form-control'
          span.input-group-btn
            = f.submit class: 'btn btn-default'
    .comment-body

/.history-panel
  = button_tag type: 'button', class: 'full-window-button history-button' do
    = t('exercises.all.history_exercises')+ ' '
    span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
    span.fa.fa-caret-down.my-caret
/div class=("history-box with-borders") data-exercise=@task.id
  .content

.actions.btn-group[role="group"]
  - if can? :edit, @task
    = link_to edit_task_path(@task),  class: 'btn btn-important' do
      i.fa.fa-edit
      = ' ' + t('exercises.show.edit')
    = link_to task_path(@task), class:'btn btn-important', method: :delete, data: { confirm: t('sure') } do
      i.fa.fa-trash
      = ' ' + t('exercises.show.delete')
  /- if can? :report, @task
    /.btn-group
      = button_tag type: 'button', data: {toggle: "dropdown"}, aria: {haspopup: "true", expanded: "false"}, class: 'btn btn-important nav-btn-exercise dropdown-toggle dropdown-toggle split' do
        = t('exercises.show.report')+ ' '
        span.caret
      .dropdown-menu#share-menu
        .dropdown-header style="padding-left: 2px;"
          = t('exercises.show.report_message')
          | :
          .input-group
            = text_field_tag 'text', nil, form: 'report', class: 'form-control'
            .input-group-btn
              = submit_tag t('exercises.show.submit'), form: 'report', class: 'btn btn-default'
  = link_to t('exercises.show.back'), tasks_path, class: 'btn btn-important'

/= form_tag report_exercise_path(@task), id: 'report'

#page_end style="margin-top: 20px"


= render 'import_export_dialog', title: t('controllers.task.import_export.dialog.export_title')
