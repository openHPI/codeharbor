- if @tasks.empty?
  - if Task.visibility(:owner, current_user).empty? && (@option == :owner)
    .card.mt-5
      .card-body
        .col-md-10
          h3.text-muted
            = t('tasks.index.search.no_tasks')
          p style=("color: #777777")
  - else
    .card.mt-5
      .card-body
        .col-md-10
          h3.text-muted
            = t('tasks.index.search.no_results')
          p style=("color: #777777")
            = t('tasks.index.search.no_results_description')
- @tasks.each do |task|
  .card.my-5
    .card-header
      h6
        span.align-middle data-toggle="tooltip" data-placement="bottom" title="#{task.title}"
          = truncate(task.title, length: 100)
        - if @visibility == :owner
          span.align-middle.visibility.pull-left data-toggle="tooltip" data-placement="bottom" title="#{t('tasks.visibility.label')}"
            = t("tasks.visibility.#{task.access_level}")
        small.star-rating.pull-right
          span.number-rating.align-middle
            = task.average_rating.round(1)
          - [*1..5].each do |i|
            span.fs-5.align-middle
              - if task.rating_star >= i
                .fa.fa-star data-rating=i
              - elsif (task.rating_star + 0.5) >= i
                .fa.fa-star-half-o data-rating=i
              - else
                .fa.fa-star-o data-rating=i
          small.text-muted.align-bottom
            = ' '
            = task.ratings.size
            = ' ' + t('tasks.all.ratings')
        span.programming-language.pull-right
          = task.programming_language&.language || t('tasks.index.no_programming_language_selected')
        / = render 'remove_state_tag', exercise: exercise
    .card-body.exercise-card
      .exercise-content
        .description.collapsable
          - if task.description == ''
            span style=("color: gray")
              = t('tasks.index.no_description')
          - else
            = task.description
        .more-btn-wrapper
          = link_to task, class: 'more-btn' do
            span class=("more-tag")
              = t('comments.show_more')
            span class=("less-tag hidden")
              = t('comments.show_less')
        /.labels
          - if exercise.labels.empty?
            span style=("color: gray")
              = t('tasks.defaults.no_labels')
          - else
            - exercise.labels.each do |label|
              .task_label style=("background-color: #{'#' + label.color.to_s}; color: #{'#' + label.font_color.to_s};")
                = label.name
      .exercise-buttons.btn-group-vertical.pull-right aria-label="..." role="group"
        - if can? :show, task
          = link_to t('tasks.index.view'), task_path(task), class:'btn btn-light'
          / = link_to t('exercises.all.duplicate'), duplicate_task_path(task), class:'btn btn-light'
        - if can? :edit, task
          = link_to t('tasks.index.edit'), edit_task_path(task), class:'btn btn-light'
          = link_to t('tasks.index.delete'), task_path(task), class:'btn btn-light', method: :delete, data: { confirm: t('sure') }
        / - if cannot? :edit, task
          = link_to 'Contribute', contribute_task_path(task), method: :post, class: 'btn btn-light'
    .card-footer
      = button_tag type: 'button', class: 'btn no-border index-comment-button', data: {task: task.id} do
        = t('comments.show_comments') + ' '
        span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
        span.fa.fa-caret-down.my-caret
      = ' '
      = button_tag type: 'button', class: 'btn no-border related-button', data: {task: task.id} do
        = t('tasks.index.related_exercises') + ' '
        span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
        span.fa.fa-caret-down.my-caret
      /.pull-right.stats
        p.impact
          = t('exercises.downloads')
          = ': '
          = task.downloads.to_s
        p.impact
          = t('exercises.in_carts')
          = ': '
          = task.in_carts
        p.impact
          = t('exercises.in_collections')
          = ': '
          = exercise.in_collections

    /div class=("related-box") data-exercise=exercise.id

      .slide-left.inactive
        = button_tag do
          i.fa.fa-caret-left
      .content
      .slide-right.inactive
        = button_tag do
          i.fa.fa-caret-right

    div class=("comment-box") data-task=task.id
      = form_for :comment, url: task_comments_path(task), remote: true do |f|
        .write-comment
          .input-group
            = f.label 'new_comment_label', t('comments.new_comment'), class: 'btn btn-light disabled input-group-addon'
            = f.text_field :text, class: 'form-control'
            = f.submit class: 'btn btn-light'
      .comment-body
= will_paginate @tasks
