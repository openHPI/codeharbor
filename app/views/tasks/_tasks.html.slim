- if @tasks.empty?
  - if Task.visibility(:owner, current_user).empty? && (@option == :owner)
    .card.my-4
      .card-body
        .col-md-10
          h4.text-body-secondary
            = t('.search.no_tasks')
          p.text-secondary.mb-2
  - else
    .card.my-4
      .card-body
        .col-md-10
          h3.text-body-secondary
            = t('.search.no_results')
          p.text-secondary
            = t('.search.no_results_description')
- @tasks.each do |task|
  .card.position-relative.my-5
    .card-header
      h6
        span.programming-language.align-middle.position-absolute.top-0.start-0.translate-middle-y.px-3.mx-3
          = task.programming_language&.language || t('.no_programming_language_selected')
        span.d-flex.justify-content-between.align-items-center.mt-2
          = link_to task_path(task), class: 'card-task-title fw-bold' do
            = truncate(task.title, length: 100)
            - if @visibility == :owner
              span.visibility.align-middle
                - if task.access_level_public?
                  i.fas.fa-lock-open
                - else
                  i.fas.fa-lock
          span.d-inline-flex.align-items-center
            span.task-rating.rating-subcategories-trigger.mx-2
              span.number-rating-container
                .number-rating = task.overall_rating
              = render('task_star_rating', rating: task.overall_rating, category: :overall_rating)
              .rating-subcategories-overlay
                = render('rating_subcategories', task:)

            span.task-rating-count
              =< task.ratings.size
              =< Rating.model_name.human(count: :many)
    .card-body
      .row.px-3
        .col-8.col-md-10.px-0
          .exercise-content
            .description.collapsable
              - if task.description == ''
                span.text-secondary
                  = t('.no_description')
              - else
                = render_markdown(task.description)
            .more-btn-wrapper
              = button_to task, class: 'more-btn' do
                .more-tag
                  = t('common.button.show_more')
                  span.fa-solid.fa-caret-down.ms-1
                .less-tag.d-none
                  = t('common.button.show_less')
                  span.fa-solid.fa-caret-up.ms-1

        .col-4.col-md-2.px-0
          .exercise-buttons.btn-group.float-end aria-label='...' role='group'
            - if policy(task).show?
              = link_to task_path(task), class: 'btn btn-light', data: {bs_toggle: 'tooltip', bs_placement: 'top', bs_title: t('common.button.view')} do
                i.fas.fa-eye aria-hidden="true"
            - if policy(task).edit?
              = link_to edit_task_path(task), class: 'btn btn-light', data: {bs_toggle: 'tooltip', bs_placement: 'top', bs_title: t('common.button.edit')} do
                i.fas.fa-edit aria-hidden="true"
            - if policy(task).destroy?
              = link_to task_path(task), class: 'btn btn-light', method: :delete, data: {bs_toggle: 'tooltip', bs_placement: 'top', bs_title: t('common.button.delete'), confirm: t('common.sure')} do
                i.fas.fa-trash-alt aria-hidden="true"

    .card-footer.d-flex.align-items-center
      .row.w-100
        .col-lg-6.d-flex.align-items-center
          = button_tag type: 'button', class: 'btn no-border index-comment-button me-1', data: {task: task.id} do
            => t('.button.show_comments')
            span.fa-solid.fa-circle-notch.fa-spin.wait.me-1.hide
            span.fa-solid.fa-caret-down.my-caret
          =< button_tag type: 'button', class: 'btn no-border related-button', data: {task: task.id} do
            => t('.button.related_exercises')
            span.fa-solid.fa-circle-notch.fa-spin.wait.me-1.hide
            span.fa-solid.fa-caret-down.my-caret
        - if task.labels.any?
          .col-lg-6.d-flex.align-items-center.flex-wrap.ms-auto.justify-content-end
            - task.labels.each do |label|
              span.badge.bg-secondary.ms-1.my-1
                = label.name

    /.related-box data-exercise=exercise.id

      .slide-left.inactive
        = button_tag do
          i.fa-solid.fa-caret-left
      .content
      .slide-right.inactive
        = button_tag do
          i.fa-solid.fa-caret-right

    .comment-box.hide data-task=task.id
      = form_for :comment, url: task_comments_path(task), remote: true do |f|
        .write-comment
          .input-group
            = f.label 'new_comment_label', t('tasks.shared.new_comment'), class: 'input-group-text'
            = f.text_field :text, class: 'form-control'
            = f.submit t('common.button.save_object', model: Comment.model_name.human), class: 'btn btn-light'
      .comment-body
= render('shared/pagination', collection: @tasks)
