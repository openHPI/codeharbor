- model_class = Exercise
.header style=("clear: both")
  .col-md-9
    .std-heading
      i.i.fa.fa-file-text-o style=("color: #008000")
      = ' ' + @exercise.title
  .col-md-3
    span.star-rating.pull-right style=("font-size: 2.0em")
      - [*1..5].each do |i|
        - if @exercise.round_avg_rating >= i
          span.fa.fa-star.overall-rating data-rating=i
        - elsif (@exercise.round_avg_rating + 0.5) >= i
          span.fa.fa-star-half-o.overall-rating data-rating=i
        - else
          span.fa.fa-star-o.overall-rating data-rating=i
      small
        .rating-dropdown
          span.btn.btn-xs#rate
            = t('exercises.rate')+ ' '
            span.caret
          .popup-rating
            .rating
              - if @user_rating
                - [*1..5].each do |i|
                  - if @user_rating >= i
                    span.fa.fa-star data-rating=i
                  - else
                    span.fa.fa-star-o data-rating=i
              - else
                - [*1..5].each do |i|
                  span.fa.fa-star-o data-rating=i

  br

legend
  span.number = '1'
  = t('exercises.form.basic_info') + ' '
  span.fa.fa-caret-down.toggle
.show-table.exercise-show
  .row
    .row-label
      = t('exercises.title')
      | :
    .row-value
      = @exercise.title

  - if @exercise_relation
    .row
      .row-label
        = t('exercises.parent')
        | :
      .row-value
        - if @exercise_relation.origin
          = link_to @exercise_relation.origin.title, exercise_path(@exercise_relation.origin)
        - else
          = t('exercises.parent_deleted')
    .row
      .row-label
        = t('exercises.relation')
        | :
      .row-value
        = @exercise_relation.relation.name

  - @exercise.descriptions.each do |description|
    .row.vertical
      .row-label
        = t('exercises.description_in') + ' '
        = description.language
        | :
      .row-value
        = description.text
  .row.vertical
    .row-label
      = t('exercises.instructions')
      | :
    .row-value
      = @exercise.instruction
  .row
    .row-label
      = t('exercises.execution_environment')
      | :
    .row-value
      = @exercise.execution_environment.language
  .row
    .row-label
      = t('exercises.created_at')
      | :
    .row-value
      = @exercise.created_at
  .row
    .row-label
      = t('exercises.created_by')
      | :
    - if !@exercise.user
      .row-value
        = t('users.undefined')
    - elsif @exercise.user == current_user
      .row-value
        = t('users.yourself')
    - elsif @exercise.user.first_name.nil?
      .row-value
        = "User#{@exercise.user.id}"
    - else
      .row-value
        = link_to @exercise.user.name, user_path(@exercise.user)
legend
  span.number = '2'
  = t('exercises.form.additional_info') + ' '
  span.fa.fa-caret-down.toggle
.show-table.exercise-show
  .row
    .row-label
      = t('exercises.visibility.label')
      | :
    .row-value
      = @exercise.private ? t('exercises.visibility.private') : t('exercises.visibility.public')
  .row
    .row-label
      = t('exercises.labels')
      | :
    .row-value
      - @exercise.labels.each do |label|
        = '#' + label.name + ' '
  .row
    .row-label
      = t('exercises.groups')
      | :
    .row-value
      - @exercise.groups.each do |group|
        = link_to group.name, group_path(group)
  .row
    .row-label
      = t('exercises.license')
      | :
    .row-value
      = @exercise.license.name
      = ': '
      = link_to @exercise.license.link, @exercise.license.link
  .row
    .row-label
      = t('exercises.impact')
      | :
    .row-value
      p.impact
        = t('exercises.downloads')
        = ': '
        = @exercise.downloads.to_s
      p.impact
        = t('exercises.in_carts')
        = ': '
        = @exercise.in_carts
      p.impact
        = t('exercises.in_collections')
        = ': '
        = @exercise.in_collections

legend
  span.number = '3'
  = t('exercises.files.label') + ' '
  span.fa.fa-caret-down.toggle
- if @files.empty?
  p style="margin-left: 10px;"
    = t('exercises.show.no_files')
- @files.each do |file|
  - if file.purpose != 'test'
    .show-table.exercise-show
      - if !file.attachment.present?
        .row
          .editor_readonly
            = file.content
      - else
        .row.vertical
          .row-label
            = t('exercises.files.attachment')
            | :
          .row-value
            - if file.has_attached_image?
              = image_tag(file.attachment.url(:large))
            - else
              = link_to file.attachment.original_filename, download_attachment_path(file), 'data-turbolinks': false
      .row
        .row-label
          = t('exercises.files.name')
          | :
        .row-value
          = file.name
      .row
        .row-label
          = t('exercises.files.path')
          | :
        .row-value
          = file.path
      .row
        .row-label
          = t('exercises.files.extension')
          | :
        .row-value
          = file.file_type.name_with_extension if file.file_type
      .row
        .row-label
          = t('exercises.files.role')
          | :
        .row-value
          = file.role

legend
  span.number = '4'
  = t('exercises.tests.label') + ' '
  span.fa.fa-caret-down.toggle


- if @tests.empty?
  p style="margin-left: 10px;"
    = t('exercises.show.no_tests')
- @tests.each do |test|
  .show-table.exercise-show
    - if !test.attachment.present?
      .row
        .editor_readonly
          = test.content
    - else
      .row.vertical
        .row-label
          = t('exercises.files.attachment')
          | :
        .row-value
          - if test.has_attached_image?
            = image_tag(test.attachment.url(:large))
          - else
            = link_to test.attachment.original_filename, download_attachment_path(test.exercise_file), 'data-turbolinks': false
    .row
      .row-label
        = t('exercises.files.name')
        | :
      .row-value
        = test.name
    .row
      .row-label
        = t('exercises.files.path')
        | :
      .row-value
        = test.path
    .row
      .row-label
        = t('exercises.files.extension')
        | :
      .row-value
        = test.file_type.name_with_extension if test.file_type
    .row.vertical
      .row-label
        = t('exercises.tests.feedback')
        | :
      .row-value
        = test.feedback_message
    .row
      .row-label
        = t('exercises.tests.framework')
        | :
      .row-value
        = test.testing_framework.name

.actions.btn-group[role="group"]

  = button_tag type: 'button', class: 'btn btn-important comment-button' do
    = t('exercises.all.comments') + ' '
    span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
    span.fa.fa-caret-down.my-caret
  = button_tag type: 'button', class: 'btn btn-important related-button' do
    = t('exercises.all.related_exercises')+ ' '
    span class="fa fa-circle-o-notch fa-spin wait" style="display:none;margin-right:5px;"
    span.fa.fa-caret-down.my-caret
  = link_to t('exercises.show.add_to_cart'), add_to_cart_path(@exercise), method: 'post', class: 'btn btn-important'
  .dropup.btn-group
    = button_tag class: 'btn btn-important dropdown-toggle',  data: {toggle: 'dropdown'} do
      = t('exercises.show.add_to_collection') + ' '
      span.caret
    ul.scrollable.dropdown-menu[role="menu"]
      - if !current_user.collections.empty?
        - current_user.collections.each do |collection|
          li
            = link_to collection.title, add_to_collection_path(collection: collection), method: 'post', class: 'dropdown-item'
      - else
        li
          = link_to t('exercises.show.add_collection'), new_collection_path(current_user)
  - if can? :push_external, Exercise
    .dropup.btn-group
      = button_tag class: 'btn btn-important dropdown-toggle', data: {toggle: 'dropdown'} do
        = t('exercises.show.export') + ' '
        span.caret
      ul.scrollable.dropdown-menu[role="menu"]
        li = link_to t('shared.download_zip'), download_exercise_exercise_url(@exercise), 'data-turbolinks': false
        li.divider
        li.dropdown-header = t('.export_to') + ': '
        - if !current_user.account_links.empty?
          - current_user.account_links.each do |acc_link|
            li
              = link_to acc_link.account_name, push_external_exercise_path(account_link: acc_link), method: 'post', class: 'dropdown-item'
        - else
          li
            = link_to t('exercises.show.define_account_link'), new_user_account_link_path(current_user)

  - if can? :edit, @exercise
    = link_to edit_exercise_path(@exercise),  class: 'btn btn-important' do
      i.fa.fa-edit
      = ' ' + t('exercises.show.edit')
    = link_to exercise_path(@exercise), class:'btn btn-important', method: :delete, data: { confirm: t('sure') } do
      i.fa.fa-trash
      = ' ' + t('exercises.show.delete')
  - if can? :report, @exercise
    .btn-group
      = button_tag type: 'button', data: {toggle: "dropdown"}, aria: {haspopup: "true", expanded: "false"}, class: 'btn btn-important nav-btn-exercise dropdown-toggle dropdown-toggle split' do
        = t('exercises.show.report')+ ' '
        span.caret
      .dropdown-menu#share-menu
        .dropdown-header style="padding-left: 2px;"
          = t('exercises.show.report_message')
          | :
          .input-group
            = text_field_tag 'text', nil, form: 'report', class: 'form-control'
            .input-group-btn
              = submit_tag t('exercises.show.submit'), form: 'report', class: 'btn btn-default'
  = link_to t('exercises.show.back'), :back,  class: 'btn btn-important'

div class=("related-box with-borders") data-exercise=@exercise.id

  .slide-left.inactive
    = button_tag do
      i.fa.fa-caret-left
  .content
  .slide-right.inactive
    = button_tag do
      i.fa.fa-caret-right

div class=("comment-box with-borders") data-exercise=@exercise.id
  = form_for :comment, url: exercise_comments_path(@exercise), remote: true do |f|
    .write-comment
      .input-group
        = f.label_tag 'new_comment_label', 'New Comment', class: 'input-group-addon'
        = f.text_field :text, class: 'form-control'
        span.input-group-btn
          = f.submit class: 'btn btn-default'
  .comment-body

= form_tag report_exercise_path(@exercise), id: 'report'

#page_end style="margin-top: 20px"